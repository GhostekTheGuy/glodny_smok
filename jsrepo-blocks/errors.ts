/*
	Installed from github/BarSwi/NomNomFrontSDK
*/
export type OrderError = {
  productName: string;
  groupName?: string;
  groupItemName?: string;
};
export enum SdkErrorKey {
  DELIVERY_OUT_OF_RANGE = "DELIVERY_OUT_OF_RANGE",
  DELIVERY_NOT_AVAILABLE = "DELIVERY_NOT_AVAILABLE",
  PICKUP_NOT_AVAILABLE = "PICKUP_NOT_AVAILABLE",
  MENUS_NOT_AVAILABLE = "MENUS_NOT_AVAILABLE",

  ORDER_VALUE_DELIVERY_ERROR = "ORDER_VALUE_DELIVERY_ERROR",
  PRODUCTS_NOT_AVAILABLE = "PRODUCTS_NOT_AVAILABLE",

  INGREDIENT_UNIQUE_COUNT_ERROR = "INGREDIENT_UNIQUE_COUNT_ERROR",
  INGREDIENT_MAX_COUNT_ERROR = "INGREDIENT_MAX_COUNT_ERROR",
  INGREDIENT_GROUP_MAX_COUNT_ERROR = "INGREDIENT_GROUP_MAX_COUNT_ERROR",
  INGREDIENT_GROUP_MIN_COUNT_ERROR = "INGREDIENT_GROUP_MIN_COUNT_ERROR",
  INGREDIENT_IN_PRODUCT_MISMATCH = "INGREDIENT_NOT_IN_PRODUCT",
  INGREDIENT_GROUP_IN_PRODUCT_MISMATCH = "INGREDIENT_GROUP_NOT_IN_PRODUCT",

  CROSS_SALE_UNIQUE_COUNT_ERROR = "CROSS_SALE_UNIQUE_COUNT_ERROR",
  CROSS_SALE_MAX_COUNT_ERROR = "CROSS_SALE_MAX_COUNT_ERROR",
  CROSS_SALE_GROUP_MAX_COUNT_ERROR = "CROSS_SALE_GROUP_MAX_COUNT_ERROR",
  CROSS_SALE_ITEM_UNAVAILABLE = "CROSS_SALE_ITEM_UNAVAILABLE",

  CUTLERY_IN_PRODUCT_MISMATCH = "CUTLERY_NOT_IN_PRODUCT",
  CUTLERY_GROUP_MAX_COUNT_ERROR = "CUTLERY_GROUP_MAX_COUNT_ERROR",

  UNKNOWN_ERROR = "UNKNOWN_ERROR",
}

export class SdkError extends Error {
  public readonly key: SdkErrorKey;
  public readonly details?: any;

  constructor(key: SdkErrorKey, message: string, details?: any) {
    super(message);
    this.name = "SdkError";
    this.key = key;
    this.details = details;

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, SdkError);
    }
  }
}
